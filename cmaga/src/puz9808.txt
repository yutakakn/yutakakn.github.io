/*'98/7/26
 *Ｃマガジン '98/8月号『Ｃマガ電脳クラブ　第89回』　
 *　with LSIC-86 Ver.3.5
 *
 *puz9808.c
 *標題【変形魔方陣】
 *
 *●makefile
 *a.exe: puz9808.c
 *	lcc86 -o a.exe puz9808.c
 *
 *●LSICについて
 *　コンパイルを行うとエラーがでるがこれは c:\lsij\lsic86\bin\makedef で
 *　CC = lcc86と修正することで直る。
 *
 *　math.hを使うには c:\lsij\lsic86\bin\_lcc86 の最終行を変更する。
 *　　-lknjlib -lmathlib -ldoslib
 *             ~~~~~~~~~追加（この位置でないとダメ）
 *
 *　makeコマンドは c:\lsij\lsic86\bin\kmmake.exeであるが make.exe と
 *　リネームした方が使いやすい。
 *
 *　Windowsにインストールした場合ルートの autoexec.bat にパスを通す必要が
 *　あるが、最後の行に call \lsij\lsic86\bin\env86.bat を追加するだけで
 *　よい。こうすると、Windows起動時にバッチファイルの実行経過が見えてしま
 *　うので、env86.batの最初の行に @echo off を入れておけば抑止される。
 *
 *Copyright (C)1995-1998 平田豊(Yutaka Hirata)
 *All rights reserved.
 */
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int use[10];                             /* 使用済みチェック */
int ma, mb, mc, md, me, mf, mg, mh, mi;  /* マスに入る数字 */
int sad, scf, sdg, sfi;                  /* temporary */
int count;                               /* 解の数 */

void disp(void)
{
	printf("%2d|%2d|%2d\n%2d|%2d|%2d\n%2d|%2d|%2d\n\n",
		ma, mb, mc, md, me, mf, mg, mh, mi);
}

void found(int sum)
{
	int i, s;
	
	for (i = 1 ; i <= 9 ; i++) {
		if (use[i] == 0 && i != mb && i != mh) {
			me = i;
			s = sum + me;
			printf("定和 %d:\n", s);
			disp();
			me = 0;
			break;
		}
	}
}

void sub3(void)
{
	int num[3];
	int i, j, sum, sum2;
	
	/* 未使用の数字を探す */
	j = 0;
	for (i = 1 ; i <= 9 ; i++) {
		if (use[i] == 0) {
			num[j++] = i;
		}
	}
	
	for (i = 0 ; i < 3 ; i++) {
		mb = num[i];
		sum = sad + mb;
		for (j = 0 ; j < 3 ; j++) {
			if (i == j) continue;
			mh = num[j];
			sum2 = sdg + mh;
			if (sum == sum2) { /* 解 */
				count++;
				/* 解を表示するときはコメントをはずす */
				/*found( sum );*/
			}
		}
	}
}

void sub2(void)
{
	for (mg = mc + 1 ; mg <= 9 ; mg++) {
		if (use[mg]) continue;
		use[mg] = 1;
		sdg = md + mg;
		
		for (mi = ma + 1 ; mi <= 9 ; mi++) {
			if (use[mi]) continue;
			sfi = mf + mi;
			if (sdg != sfi) continue;
			if (sdg < sfi) break;
			use[mi] = 1;
			
			sub3();
			
			use[mi] = 0;
		}
		
		use[mg] = 0;
	}
}

void sub(void)
{
	for (ma = 1 ; ma <= 9 ; ma++) {
		if (use[ma]) continue;
		use[ma] = 1;
		
		for (md = 1 ; md <= 9 ; md++) {
			if (use[md]) continue;
			use[md] = 1;
			sad = ma + md;
			
			for (mc = ma + 1 ; mc <= 8 ; mc++) {
				if (use[mc]) continue;
				use[mc] = 1;
				
				for (mf = 1 ; mf <= 9 ; mf++) {
					if (use[mf]) continue;
					scf = mc + mf;
					if (sad != scf) continue;
					if (sad < scf) break;
					use[mf] = 1;
					
					sub2();
					
					use[mf] = 0;
				}
				
				use[mc] = 0;
			}
			
			use[md] = 0;
		}
		
		use[ma] = 0;
	}
}

int main(void)
{
	time_t s = time(NULL);
	
	sub();
	
	printf("解： %d 種類\n", count);
	
	s = time(NULL) - s;
	printf("実行時間 %ld : %ld : %ld\n",(s/60)/60, (s/60)%60 , s % 60);	
	return 0;
}
