#pragma hdrstop
#include <condefs.h>

/*'99/2/27
 *
 *puz9902.c  with C++Builder3
 *Ｃマガジン '99/3月号『Ｃマガ電脳クラブ 第96回 -スライドパズル9-』
 *
 *Copyright (C)1995-1999 平田豊
 *All rights reserved.
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#define MAX 362880  /* 9!通り */

char moves[ MAX ];
long offset[] = {40320, 5040, 720, 120, 24, 6, 2, 1};

int swap[12][3] = {
	{6,3,0},
	{7,4,1},
	{8,5,2},
	{0,1,2},
	{3,4,5},
	{6,7,8},
	{2,5,8},
	{1,4,7},
	{0,3,6},
	{8,7,6},
	{5,4,3},
	{2,1,0},
};

void show(char *pattern)
{
	printf("%d %d %d\n%d %d %d\n%d %d %d\n\n",
		pattern[0]+1, pattern[1]+1, pattern[2]+1,
		pattern[3]+1, pattern[4]+1, pattern[5]+1,
		pattern[6]+1, pattern[7]+1, pattern[8]+1
		);
}

void pattern_index(char *pattern, long *index_p)
{
	static char check[9];
	long index;
	int i, j;

	memset(check, 0, 9);
	for (index = 0L, i = 0 ; i < 8 ; i++) {
		for (j = 0 ; j < 9 ; j++) {
			if (check[j] == 0) {
				if (pattern[j] == i) {
					check[j] = 1;
					break;
				}
				index += offset[i];
			}
		}
	}
	*index_p = index;
}

void index_pattern(long index, char *pattern)
{
	static char check[9];
	long temp_index, temp;
	int i, j;

	memset(check, 0, 9);
	memset(pattern, 8, 9);
	temp_index = index;
	for (i = 0 ; i < 8 ; i++) {
		temp = temp_index / offset[i];
		temp_index %= offset[i];
		for (j = 0 ; j < 9 ; j++) {
			if (check[j] == 0) {
				if (--temp < 0) {
					check[j] = 1;
					pattern[j] = i;
					break;
				}
			}

		}
	}

}

void sub(void)
{
	char pattern[9], c;
	int j, count;
	long i, index, new_index, flag;

	for (i = 0 ; i < MAX ; i++) moves[i] = -1;
	for (j = 0 ; j < 9 ; j++) pattern[j] = j;
	pattern_index(pattern, &index);   /* 最初のパターンを登録 */
	moves[index] = 0;      /* 最初は0手目 */

	for (count = 0 ; count < 256 ; count++) { /* 手数 */
 		flag = 0;
		for (i = 0 ; i < MAX ; i++)    /* 全パターンから探す */
			if (moves[i] == count) {
				flag++;
				index_pattern(i, pattern);

				for (j = 0 ; j < 12 ; j++) { /* 12通りのスライド */
					c = pattern[ swap[j][0] ];
					pattern[ swap[j][0] ] = pattern[ swap[j][1] ];
					pattern[ swap[j][1] ] = pattern[ swap[j][2] ];
					pattern[ swap[j][2] ] = c;

					pattern_index(pattern, &new_index);
					if (moves[new_index] == -1) { /* 新規盤面なら */
						moves[new_index] = count + 1;
					}

					c = pattern[ swap[j][2] ];
					pattern[ swap[j][2] ] = pattern[ swap[j][1] ];
					pattern[ swap[j][1] ] = pattern[ swap[j][0] ];
					pattern[ swap[j][0] ] = c;
				}

			}
		if (flag == 0) break;
        printf("%d手は %d 通り\n", count, flag);
	}
}

int main(void)
{
	clock_t start = clock();

	sub();

    start = clock() - start;
    printf("実行時間 %f 秒\n", start / CLK_TCK);
	return 0;
}

