/* 2000/7/20
 *
 * puz0008.c    with Borland C++Compiler5.5
 * CMAGAZINE 2000/8 No.113[三数教室]
 *
 * Copyright (C)1996-2000 平田豊
 * All rights reserved.
 */
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>

#define COMB 4        /* 組の数 */
#define MAX 100

int num[ COMB*3 ];    /* 3数 */
int g_add, g_mul;

/* 解の表示 */
void found(void)
{
	int i;

	for (i = 0 ; i < COMB ; i++) {
		printf("(%d, %d, %d) ", num[i*3], num[i*3+1], num[i*3+2]);
	}
	printf("和[%d]  積[%d]\n", g_add, g_mul);
}

/* 同じ数がすでに使用されていないかをチェック */
int check(int val, int range)
{
	int i;
	
	for (i = 0 ; i < range ; i++) {
		if (num[i] == val) return 1;
	}
	return 0;
}

/* 3数の決定処理 */
int sub(int n)
{
	int add, mul, ta, tm;
	
	if (n >= COMB*3) {
		found();
		return 1;
	}

	/* num[n]〜num[n+2]までを数を決定する（num[n]＜num[n+1]＜num[n+2]）。*/
	for (num[n] = num[n-3] + 1; num[n] < MAX ; num[n]++) {
		/* 同じ数がすでに使われていないかをチェック */
		if ( check(num[n], n) ) continue;

		for (num[n+1] = num[n] + 1; num[n+1] < MAX ; num[n+1]++) {
			if ( check(num[n+1], n) ) continue;
			if ((ta = num[n] + num[n+1]) > g_add) break;
			if ((tm = num[n] * num[n+1]) > g_mul) break;
		
			for (num[n+2] = num[n+1] + 1; num[n+2] < MAX ; num[n+2]++) {
				if ( check(num[n+2], n) ) continue;
				
				add = ta + num[n+2];
				if (add > g_add) break;
				if (add != g_add) continue;

				mul = tm * num[n+2];
				if (mul > g_mul) break;
				if (mul != g_mul) continue;
				
				if (sub(n + 3) == 1) return 1;
			}

		}

	}
	return 0;
}

int main(void)
{
	clock_t t = clock();
	int max, min;
	
	/* 和の範囲を制限しながら探索する */
	min = 10;
	for (max = 20 ; max < 1000 ; max += 10) {
		printf("(%d 〜 %d)\n", min, max);
		for (num[0] = 1; num[0] < MAX ; num[0]++) {
			for (num[1] = num[0] + 1; num[1] < MAX ; num[1]++) {
				for (num[2] = num[1] + 1; num[2] < MAX ; num[2]++) {
					g_add = num[0] + num[1] + num[2];
					if (g_add < min) continue;
					if (g_add > max) break;
					g_mul = num[0] * num[1] * num[2];
					if (sub(3) == 1) goto END;
				}
			}
		}
		min = max;
	}
END:;
	
    printf("time %f\n", (double)((clock() - t) / CLK_TCK));
	return 0;
}

