/* 2000/1/3
 *
 * puz0001.c  with C++Builder3(Windows95)
 * CMAGAZINE 2000/1 No.106[クロススクエアドナンバーパズル]
 *
 * Copyright (C)1996-2000 平田豊
 * All rights reserved.
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

typedef struct {  /* 平方数管理テーブル */
	int n;      /* 数 */
	int keta;   /* 平方数の桁 */
	int use;    /* フラグ */
	int buf[6]; /* 分解した桁 */
}Square;

Square square[320];
int sqr_cnt;

typedef struct { /* クロスワード行列管理テーブル */
	int keta;   /* マスの数 */
	int pos[5]; /* 位置 */
}Cross;

Cross cross[16] = {
	{4, 0,1,2,3},
	{3, 0,6,12},
	{2, 6,7},
	{5, 1,7,13,19,25},
	{5, 12,13,14,15,16},
	{4, 3,9,15,21},
	{3, 9,10,11},
	{2, 5,11},
	{5, 19,20,21,22,23},
	{5, 10,16,22,28,34},
	{4, 14,20,26,32},
	{3, 24,25,26},
	{2, 24,30},
	{4, 32,33,34,35},
	{3, 23,29,35},
	{2, 28,29}
};

int board[6 * 6];  /* クロスワード */
int ans_cnt = 0;   /* 解の個数 */

void disp(void)
{
	int i, c;
	
	for (i = 0 ; i < 36 ; i++) {
		c = board[i];
		if (i == 4 || i == 8 || i == 17 || i == 18 || i == 27 || i == 31)
			printf("■");
		else
			printf("%2d", c);
		if (i == 5 || i == 11 || i == 17 || i == 23 || i == 29 || i == 359)
			printf("\n");
	}
	printf("\n");
}

void sub(int n)
{
	int keta, pos, i, j, k;
	int tmp[5], sp_tmp;
	
	if (n >= 16) {
		ans_cnt++;
		disp();
		return;
	}
	
	keta = cross[n].keta;
	for (i = 0 ; i < sqr_cnt ; i++) {    /* 平方数 */
		if (square[i].keta > keta) break;
		if (square[i].keta < keta) continue;
		if (square[i].use != 0) continue;  /* 使用済みなら使わない */
		
		for (j = 0 ; j < keta ; j++) { /* マスに置けるかどうかチェック */
			pos = cross[n].pos[j];
			if (board[pos] != -1 && board[pos] != square[i].buf[j])
				break;
		}
		if (j == keta) { /* マスに置く */
			square[i].use = 1;
			sp_tmp = 0;
			for (k = 0 ; k < keta ; k++) {
				pos = cross[n].pos[k];
				if (board[pos] == -1) {
					tmp[sp_tmp++] = pos;
					board[pos] = square[i].buf[k];
				}
			}
			
			sub(n + 1);
			
			for (k = 0 ; k < sp_tmp ; k++) {
				board[ tmp[k] ] = -1;
			}
			square[i].use = 0;
		}
	}
}

void init(void)
{
	int i, j, len;
	char buf[6];
	
	/* 平方数のテーブル作成 */
	sqr_cnt = 0;
	for (i = 4 ; i <= 316 ; i++) {
		square[sqr_cnt].n = i;
		square[sqr_cnt].use = 0;
		sprintf(buf, "%ld", (long)i*i);
		len = strlen(buf);
		for (j = 0 ; j < len ; j++) {
			square[sqr_cnt].buf[j] = buf[j] - '0';
		}
		square[sqr_cnt].keta = len;
		sqr_cnt++;
	}
	
	memset(board, -1, sizeof(board));
}

int main(void)
{
	clock_t t = clock();
	
	init();
	sub(0);
	printf("解: %d とおり\n", ans_cnt);

    printf("time %f\n", (clock() - t) / CLK_TCK);
	return 0;
}
