/*'97/4/27 - 4/29
 *Ｃマガジン '97/5月号『Ｃマガ電脳クラブ　第７４回』　
 *　with Turbo C++ 4.0J for DOS
 *
 *PUZ9705.C
 *
 *標題【もとどおり数】
 *
 *Copyright (C) 1995-1997 平田　豊(Yutaka Hirata)
 *All rights reserved.
 *<e-mail>yutaka@timpani.seg.kobe-u.ac.jp
 *<URL>http://www25.seg.kobe-u.ac.jp/yutaka/
 */
#include <stdio.h>
#include <string.h>
#include <limits.h>

#define KETA 30           /* 桁数 */
#define N ((KETA-1)/4+1)  /* 配列サイズ */

short num[ N ];           /* 累乗した数 */

void backup(int f,int p,int q)
{
	static short ans[ N ];
	static int bp,bq;
	int i;

	if(!f){
		bp = p; bq = q;
		for(i = 0 ; i < N ; i++) ans[i] = num[i];
	}else{
		printf("　解：%dの%d乗は…",bp,bq);
		for(i = 0 ; i < N ; i++) printf("%04d ",ans[i]);
		putchar('\n');
	}
}

/* 4桁の数ｎにおいて各桁の数字の和を求めます。*/
int getsum(short n)
{
	static short d[] = {1000,100,10,1};
	int i,s;

	s = 0;
	for(i = 0 ; i < 4 ; i++){
		s += (n / d[i]);
		n %= d[i];
	}
	return( s );
}

/* 数字ｎの桁数を求めます。*/
int getketa(short n)
{
	static short d[] = {1000,100,10,1};
	static int keta[] = {4,3,2,1,0};
	int i,j;

	for(i = 0 ; i < 4 ; i++){
		j = n / d[i];
		if(j) break;
	}
	return( keta[i] );
}

/* 多桁ｗの各桁の和を求め、また桁数をｋｅｔａへ求めます。*/
int sum(short w[],int *keta)
{
	int i,j,s,k;

	s = j = k = 0;
	for(i = 0 ; i < N ; i++){
		if(!j && w[i]){  /* 上位からサーチし最初に見つかった桁ならば */
			j = 1;
			k = getketa(w[i]);
		}else{
			k += 4;      /* 以降は数字の中身に関わらず4桁を加算 */
		}
		s += getsum(w[i]);  /* 各桁の数字の和 */
	}
	*keta = k;
	return( s );
}

/* 多桁計算（ａｘｂ　=>　ｃ） */
void lmul(short a[],short b,short c[])
{
	int i;
	long d,t,cy = 0;

	for(i = N - 1 ; i >= 0 ; i--){
		d = a[i];
		t = d*b + cy;
		c[i] = t % 10000;
		cy = t / 10000;
	}
}

void sub(void)
{
	int i,p,q,s,keta;
	int cnt;

	for(q = 3 ; q < INT_MAX ; q++){   /* ｑ乗 */
		cnt = 0;      /* 「もとどおり数」が成立する組み合わせの個数 */
		for(p = 2 ; p < INT_MAX ; p++){
			memset(num,0,sizeof(num));
			num[N-1] = 1;

			for(i = 0 ; i < q ; i++) lmul(num,p,num); /* ｐのｑ乗 */

			s = sum(num,&keta);
			if(p == s){
				cnt++;
				if(cnt >= 2) break;
				if(cnt == 1){
					backup(0,p,q);   /* 解を記録 */
				}
			}
			if(p > 9*keta) break;    /* 枝刈 */
		}
		if(cnt == 1){
			printf("%2d乗は %d 通り\n",q,cnt);
			backup(1,0,0);
			break;
		}
	}
}

int main(void)
{
	puts("C Magazine Puzzle...");
	sub();
	return 0;
}

